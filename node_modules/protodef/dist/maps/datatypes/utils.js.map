{"version":3,"sources":["datatypes/utils.js"],"names":[],"mappings":"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","file":"datatypes/utils.js","sourcesContent":["var assert = require('assert');\n\nvar { getField, tryDoc } = require(\"../utils\");\n\nmodule.exports = {\n  'varint': [readVarInt, writeVarInt, sizeOfVarInt],\n  'bool': [readBool, writeBool, 1],\n  'pstring': [readPString, writePString, sizeOfPString],\n  'buffer': [readBuffer, writeBuffer, sizeOfBuffer],\n  'void': [readVoid, writeVoid, 0],\n  'bitfield': [readBitField, writeBitField, sizeOfBitField],\n  'cstring': [readCString, writeCString, sizeOfCString],\n  'mapper':[readMapper,writeMapper,sizeOfMapper]\n};\n\nfunction readMapper(buffer,offset,{type,mappings},rootNode)\n{\n  var {size,value}=this.read(buffer, offset, type, rootNode);\n  var results={\n    size:size,\n    value:mappings[value]\n  };\n  if(results.value==undefined) throw new Error(value+\" is not in the mappings value\");\n  return results;\n}\n\nfunction writeMapper(value,buffer,offset,{type,mappings},rootNode)\n{\n  var keys=Object.keys(mappings);\n  var mappedValue=null;\n  for(var i=0;i<keys.length;i++) {\n    if(mappings[keys[i]]==value) {\n      mappedValue = keys[i];\n      break;\n    }\n  }\n  if(mappedValue==null) throw new Error(value+\" is not in the mappings value\");\n  return this.write(mappedValue,buffer,offset,type,rootNode);\n}\n\nfunction sizeOfMapper(value,{type,mappings},rootNode)\n{\n  var keys=Object.keys(mappings);\n  var mappedValue=null;\n  for(var i=0;i<keys.length;i++) {\n    if(mappings[keys[i]]==value) {\n      mappedValue = keys[i];\n      break;\n    }\n  }\n  if(mappedValue==null) throw new Error(value+\" is not in the mappings value\");\n  return this.sizeOf(mappedValue,type,rootNode);\n}\n\nfunction readVarInt(buffer, offset) {\n  var result = 0;\n  var shift = 0;\n  var cursor = offset;\n\n  while(true) {\n    if(cursor + 1 > buffer.length) return null;\n    var b = buffer.readUInt8(cursor);\n    result |= ((b & 0x7f) << shift); // Add the bits to our number, except MSB\n    cursor++;\n    if(!(b & 0x80)) { // If the MSB is not set, we return the number\n      return {\n        value: result,\n        size: cursor - offset\n      };\n    }\n    shift += 7; // we only have 7 bits, MSB being the return-trigger\n    assert.ok(shift < 64, \"varint is too big\"); // Make sure our shift don't overflow.\n  }\n}\n\nfunction sizeOfVarInt(value) {\n  var cursor = 0;\n  while(value & ~0x7F) {\n    value >>>= 7;\n    cursor++;\n  }\n  return cursor + 1;\n}\n\nfunction writeVarInt(value, buffer, offset) {\n  var cursor = 0;\n  while(value & ~0x7F) {\n    buffer.writeUInt8((value & 0xFF) | 0x80, offset + cursor);\n    cursor++;\n    value >>>= 7;\n  }\n  buffer.writeUInt8(value, offset + cursor);\n  return offset + cursor + 1;\n}\n\n\nfunction readPString(buffer, offset, {countType,countTypeArgs},rootNode) {\n  var {size,value}=tryDoc(() => this.read(buffer, offset, { type: countType, typeArgs: countTypeArgs }, rootNode),\"$count\");\n  var cursor = offset + size;\n  var strEnd = cursor + value;\n  if(strEnd > buffer.length) throw new Error(\"Missing characters in string, found size is \"+buffer.length+\n    \" expected size was \"+strEnd);\n\n  return {\n    value: buffer.toString('utf8', cursor, strEnd),\n    size: strEnd - offset\n  };\n}\n\nfunction writePString(value, buffer, offset, {countType,countTypeArgs},rootNode) {\n  var length = Buffer.byteLength(value, 'utf8');\n  offset=tryDoc(() => this.write(length, buffer, offset, { type: countType, typeArgs: countTypeArgs }, rootNode),\"$count\");\n  buffer.write(value, offset, length, 'utf8');\n  return offset + length;\n}\n\n\nfunction sizeOfPString(value, {countType,countTypeArgs},rootNode) {\n  var length = Buffer.byteLength(value, 'utf8');\n  var size=tryDoc(() => this.sizeOf(length, { type: countType, typeArgs: countTypeArgs }, rootNode),\"$count\");\n  return size + length;\n}\n\nfunction readBool(buffer, offset) {\n  if(offset + 1 > buffer.length) return null;\n  var value = buffer.readInt8(offset);\n  return {\n    value: !!value,\n    size: 1\n  };\n}\n\nfunction writeBool(value, buffer, offset) {\n  buffer.writeInt8(+value, offset);\n  return offset + 1;\n}\n\n\nfunction readBuffer(buffer, offset, {count,countType,countTypeArgs}, rootNode) {\n  var totalSize = 0;\n  var totalCount;\n  if (typeof count !== \"undefined\")\n    totalCount = getField(count, rootNode);\n  else if (typeof countType !== \"undefined\") {\n    var {value,size} = this.read(buffer, offset, { type: countType, typeArgs: countTypeArgs }, rootNode);\n    totalSize += size;\n    offset += size;\n    totalCount = value;\n  }\n  return {\n    value: buffer.slice(offset, offset + totalCount),\n    size: totalSize + totalCount\n  };\n}\n\nfunction writeBuffer(value, buffer, offset, {count,countType,countTypeArgs}, rootNode) {\n  if (typeof count === \"undefined\" && typeof countType !== \"undefined\") {\n    offset = this.write(value.length, buffer, offset, { type: countType, typeArgs: countTypeArgs }, rootNode);\n  } else if (typeof count === \"undefined\") { // Broken schema, should probably error out\n  }\n  value.copy(buffer, offset);\n  return offset + value.length;\n}\n\nfunction sizeOfBuffer(value, {count,countType,countTypeArgs}, rootNode) {\n  var size = 0;\n  if (typeof count === \"undefined\" &&\n      typeof countType !== \"undefined\") {\n    size = this.sizeOf(value.length, { type: countType, typeArgs: countTypeArgs }, rootNode);\n  }\n  return size + value.length;\n}\n\nfunction readVoid() {\n  return {\n    value: undefined,\n    size: 0\n  };\n}\n\nfunction writeVoid(value, buffer, offset) {\n  return offset;\n}\n\nfunction generateBitMask(n) {\n  return (1 << n) - 1;\n}\n\nfunction readBitField(buffer, offset, typeArgs) {\n  var beginOffset = offset;\n  var curVal = null;\n  var bits = 0;\n  var results = {};\n  results.value = typeArgs.reduce(function(acc, {size,signed,name}) {\n    var currentSize = size;\n    var val = 0;\n    while (currentSize > 0) {\n      if (bits == 0) {\n        curVal = buffer[offset++];\n        bits = 8;\n      }\n      var bitsToRead = Math.min(currentSize, bits);\n      val = (val << bitsToRead) | (curVal & generateBitMask(bits)) >> (bits - bitsToRead);\n      bits -= bitsToRead;\n      currentSize -= bitsToRead;\n    }\n    if (signed && val >= 1 << (size - 1))\n      val -= 1 << size;\n    acc[name] = val;\n    return acc;\n  }, {});\n  results.size = offset - beginOffset;\n  return results;\n}\nfunction writeBitField(value, buffer, offset, typeArgs) {\n  var toWrite = 0;\n  var bits = 0;\n  typeArgs.forEach(function({size,signed,name}) {\n    var val = value[name];\n    if ((!signed && val < 0) || (signed && val < -(1 << (size - 1))))\n      throw new Error(value + \" < \" + signed ? (-(1 << (size - 1))) : 0);\n    else if ((!signed && val >= 1 << size)\n        || (signed && val >= (1 << (size - 1)) - 1))\n      throw new Error(value + \" >= \" + signed ? (1 << size) : ((1 << (size - 1)) - 1));\n    while (size > 0) {\n      var writeBits = Math.min(8 - bits, size);\n      toWrite = toWrite << writeBits |\n        ((val >> (size - writeBits)) & generateBitMask(writeBits));\n      size -= writeBits;\n      bits += writeBits;\n      if (bits === 8) {\n        buffer[offset++] = toWrite;\n        bits = 0;\n        toWrite = 0;\n      }\n    }\n  });\n  if (bits != 0)\n    buffer[offset++] = toWrite << (8 - bits);\n  return offset;\n}\n\nfunction sizeOfBitField(value, typeArgs) {\n  return Math.ceil(typeArgs.reduce(function(acc, {size}) {\n    return acc + size;\n  }, 0) / 8);\n}\n\nfunction readCString(buffer, offset) {\n  var str = \"\";\n  while (offset < buffer.length && buffer[offset] != 0x00)\n    str += buffer[offset++];\n  if (offset < buffer.length)\n    return null;\n  else\n    return str;\n}\n\nfunction writeCString(value, buffer, offset) {\n  buffer.write(value, offset);\n  offset += value.length;\n  buffer.writeInt8(0x00, offset);\n  return offset + 1;\n}\n\nfunction sizeOfCString(value) {\n  return value.length + 1;\n}\n"],"sourceRoot":"/source/"}